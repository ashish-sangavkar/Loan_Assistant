package Loan_Assistant;
import java.awt.Color;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class Loan_Assistant extends javax.swing.JFrame {

    double loan_amt, interest, monthlyPayment, ans;
    int month;
    char c;
    public Loan_Assistant() {
        initComponents();
        btn_NewLoan.setEnabled(false);
        btn_NOPayments.setVisible(true);
        btn_MonthlyPayment.setVisible(false);
        txt_NOPayments.setBackground(Color.white);
        txt_MonthlyPayment.setBackground(Color.yellow);
        txt_NOPayments.setEditable(true);
        txt_MonthlyPayment.setEditable(false);
        txt_NOPayments.setFocusable(true);
        txt_MonthlyPayment.setFocusable(false);
        btn_Compute.setText("Compute Monthly Payment ");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        label1 = new javax.swing.JLabel();
        label3 = new javax.swing.JLabel();
        label4 = new javax.swing.JLabel();
        txt_LoanBalance = new javax.swing.JTextField();
        txt_InterestRate = new javax.swing.JTextField();
        txt_NOPayments = new javax.swing.JTextField();
        txt_MonthlyPayment = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_LoanAnalysis = new javax.swing.JTextArea();
        btn_NOPayments = new javax.swing.JButton();
        btn_Compute = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();
        btn_NewLoan = new javax.swing.JButton();
        btn_MonthlyPayment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Loan Assistant");

        label2.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        label2.setText("Interest Rate");

        jLabel3.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        jLabel3.setText("      Loan Analysis");

        label1.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        label1.setText("Loan Balance");

        label3.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        label3.setText("Number of Payments");

        label4.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        label4.setText("Monthly Payment");

        txt_LoanBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_LoanBalanceActionPerformed(evt);
            }
        });
        txt_LoanBalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_LoanBalanceKeyTyped(evt);
            }
        });

        txt_InterestRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_InterestRateActionPerformed(evt);
            }
        });
        txt_InterestRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_InterestRateKeyTyped(evt);
            }
        });

        txt_NOPayments.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_NOPaymentsKeyTyped(evt);
            }
        });

        txt_MonthlyPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_MonthlyPaymentActionPerformed(evt);
            }
        });
        txt_MonthlyPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_MonthlyPaymentKeyTyped(evt);
            }
        });

        txt_LoanAnalysis.setColumns(20);
        txt_LoanAnalysis.setFont(new java.awt.Font("Constantia", 0, 16)); // NOI18N
        txt_LoanAnalysis.setRows(5);
        jScrollPane1.setViewportView(txt_LoanAnalysis);

        btn_NOPayments.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        btn_NOPayments.setText("X");
        btn_NOPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NOPaymentsActionPerformed(evt);
            }
        });

        btn_Compute.setFont(new java.awt.Font("Constantia", 0, 16)); // NOI18N
        btn_Compute.setText("Compute Monthly Payment ");
        btn_Compute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ComputeActionPerformed(evt);
            }
        });

        btn_Exit.setFont(new java.awt.Font("Constantia", 0, 16)); // NOI18N
        btn_Exit.setText("Exit");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });

        btn_NewLoan.setFont(new java.awt.Font("Constantia", 0, 16)); // NOI18N
        btn_NewLoan.setText("New Loan Analysis");
        btn_NewLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NewLoanActionPerformed(evt);
            }
        });

        btn_MonthlyPayment.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        btn_MonthlyPayment.setText("X");
        btn_MonthlyPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MonthlyPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_InterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_NOPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_NOPayments))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_MonthlyPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_MonthlyPayment))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btn_Compute, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(btn_NewLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_LoanBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_LoanBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_InterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_NOPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_NOPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_MonthlyPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_MonthlyPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(btn_Compute, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btn_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_NewLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void showOnDisplay(double loan_amount, double interest, double month, double monthlyPayment){
        txt_LoanAnalysis.setText("Loan Balance : "+loan_amt);
        interest=Double.parseDouble(txt_InterestRate.getText());
        txt_LoanAnalysis.append("\nInterest Rate : "+new DecimalFormat("0.00").format(interest)+"%");
        interest=interest/1200;
        double loanBalance = loan_amt;
        for (int pn = 1; pn <= month - 1; pn++)
        {
            loanBalance += loanBalance * interest - monthlyPayment;
        }

        double finalPayment = loanBalance;
        if (finalPayment > monthlyPayment)
        {

            loanBalance += loanBalance * interest - monthlyPayment;
            finalPayment = loanBalance;
        }
        txt_LoanAnalysis.append("\n\n"+String.valueOf(month-1)+" Payments of $ "+new DecimalFormat("0.00").format(monthlyPayment));
        txt_LoanAnalysis.append("\n" + "Final Payment of : $" + new DecimalFormat("0.00").format(finalPayment));
        txt_LoanAnalysis.append("\n" + "Total Payments : $" + new DecimalFormat("0.00").format((month - 1) * monthlyPayment + finalPayment));
        txt_LoanAnalysis.append("\n" + "Interest Paid : $" + new DecimalFormat("0.00").format((month - 1) * monthlyPayment + finalPayment - loan_amt));
    }
    
    private void txt_MonthlyPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_MonthlyPaymentActionPerformed

    }//GEN-LAST:event_txt_MonthlyPaymentActionPerformed

    private void txt_InterestRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_InterestRateActionPerformed
        
    }//GEN-LAST:event_txt_InterestRateActionPerformed

    private void txt_LoanBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_LoanBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_LoanBalanceActionPerformed

    private void btn_NewLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NewLoanActionPerformed
        txt_LoanBalance.setText("");
        txt_InterestRate.setText("");
        txt_NOPayments.setText("");
        txt_MonthlyPayment.setText("");
        txt_LoanAnalysis.setText("");
        btn_NewLoan.setEnabled(false);
        btn_Compute.setEnabled(true);
    }//GEN-LAST:event_btn_NewLoanActionPerformed

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void btn_ComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ComputeActionPerformed
 
        if(txt_LoanBalance.getText().equals("") ||txt_InterestRate.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Details Missing!, Enter All Required Details...");
        }
        else{
            try{
                if(txt_NOPayments.isEditable() && !txt_MonthlyPayment.isEditable()){
                    if(txt_NOPayments.getText().equals("")){
                       JOptionPane.showMessageDialog(null,"Plzz Enter No Of Payments..."); 
                    }
                    else{
                        loan_amt=Double.parseDouble(txt_LoanBalance.getText());
                        interest=Double.parseDouble(txt_InterestRate.getText());
                        month=Integer.parseInt(txt_NOPayments.getText());
                        if(interest!=0){
                            interest=interest/1200;
                            ans=Math.pow(1+interest, month);
                            monthlyPayment = loan_amt * interest * ans/ (ans- 1);
                            txt_MonthlyPayment.setText(new DecimalFormat("0.00").format(monthlyPayment));
                            interest=Double.parseDouble(txt_InterestRate.getText());
                            showOnDisplay(loan_amt, interest, month, monthlyPayment); 
                        }
                        else{
                            monthlyPayment=loan_amt/month;
                            txt_MonthlyPayment.setText(new DecimalFormat("0.00").format(monthlyPayment));    
                            txt_LoanAnalysis.append("\n\n"+String.valueOf(month)+" Payments of $ "+new DecimalFormat("0.00").format(monthlyPayment));
                            txt_LoanAnalysis.append("\n" + "Final Payment of : $" + new DecimalFormat("0.00").format(0));
                            txt_LoanAnalysis.append("\n" + "Total Payments : $" + new DecimalFormat("0.00").format(loan_amt));
                            txt_LoanAnalysis.append("\n" + "Interest Paid : $" + new DecimalFormat("0.00").format(0));
                        }
                        
                    }
                }
                else{
                    if(txt_MonthlyPayment.getText().equals("")){
                       JOptionPane.showMessageDialog(null,"Plzz Enter Monthly Payment..."); 
                    }
                    else{
                        loan_amt=Double.parseDouble(txt_LoanBalance.getText());
                        interest=Double.parseDouble(txt_InterestRate.getText());
                        monthlyPayment=Double.parseDouble(txt_MonthlyPayment.getText());
                        if(interest!=0){
                            interest=interest/1200;
                            month = (int)((Math.log(monthlyPayment) - Math.log(monthlyPayment - loan_amt * interest)) /Math.log(1 + interest));
                            txt_NOPayments.setText(String.valueOf(month));
                            interest=Double.parseDouble(txt_InterestRate.getText());
                            showOnDisplay(loan_amt, interest, month, monthlyPayment);
                        }
                        else{
                            month=(int)(loan_amt/monthlyPayment);
                            txt_NOPayments.setText(String.valueOf(month));
                            txt_LoanAnalysis.append("\n\n"+String.valueOf(month)+" Payments of $ "+new DecimalFormat("0.00").format(monthlyPayment));
                            txt_LoanAnalysis.append("\n" + "Final Payment of : $" + new DecimalFormat("0.00").format(0));
                            txt_LoanAnalysis.append("\n" + "Total Payments : $" + new DecimalFormat("0.00").format(loan_amt));
                            txt_LoanAnalysis.append("\n" + "Interest Paid : $" + new DecimalFormat("0.00").format(0));
                        }
                        
                    }
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,""+e);
            }
        btn_NewLoan.setEnabled(true);   
        btn_Compute.setEnabled(false);
        }
        
    }//GEN-LAST:event_btn_ComputeActionPerformed

    private void btn_NOPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NOPaymentsActionPerformed
        btn_NOPayments.setVisible(false);
        btn_MonthlyPayment.setVisible(true);
        txt_NOPayments.setBackground(Color.yellow);
        txt_MonthlyPayment.setBackground(Color.white);
        txt_NOPayments.setEditable(false);
        txt_MonthlyPayment.setEditable(true);
        txt_NOPayments.setFocusable(false);
        txt_MonthlyPayment.setFocusable(true);
        txt_MonthlyPayment.requestFocus();
        btn_Compute.setText("Compute Number of Payments ");
        txt_NOPayments.setText("");
        txt_MonthlyPayment.setText("");
        
    }//GEN-LAST:event_btn_NOPaymentsActionPerformed

    private void btn_MonthlyPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MonthlyPaymentActionPerformed
        btn_NOPayments.setVisible(true);
        btn_MonthlyPayment.setVisible(false);
        txt_NOPayments.setBackground(Color.white);
        txt_MonthlyPayment.setBackground(Color.yellow);
        txt_NOPayments.setEditable(true);
        txt_MonthlyPayment.setEditable(false);
        txt_NOPayments.setFocusable(true);
        txt_MonthlyPayment.setFocusable(false);
        txt_NOPayments.requestFocus();
        btn_Compute.setText("Compute Monthly Payment");
        txt_NOPayments.setText("");
        txt_MonthlyPayment.setText("");
    }//GEN-LAST:event_btn_MonthlyPaymentActionPerformed

    private void txt_LoanBalanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_LoanBalanceKeyTyped
        c=evt.getKeyChar();
        if(!Character.isDigit(c) && c!='.')
            evt.consume();
    }//GEN-LAST:event_txt_LoanBalanceKeyTyped

    private void txt_InterestRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_InterestRateKeyTyped
        c=evt.getKeyChar();
        if(!Character.isDigit(c) && c!='.')
            evt.consume();
    }//GEN-LAST:event_txt_InterestRateKeyTyped

    private void txt_NOPaymentsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NOPaymentsKeyTyped
        c=evt.getKeyChar();
        if(!Character.isDigit(c) && c!='.')
            evt.consume();
    }//GEN-LAST:event_txt_NOPaymentsKeyTyped

    private void txt_MonthlyPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_MonthlyPaymentKeyTyped
        c=evt.getKeyChar();
        if(!Character.isDigit(c) && c!='.')
            evt.consume();
    }//GEN-LAST:event_txt_MonthlyPaymentKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Loan_Assistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Loan_Assistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Loan_Assistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Loan_Assistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Loan_Assistant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Compute;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_MonthlyPayment;
    private javax.swing.JButton btn_NOPayments;
    private javax.swing.JButton btn_NewLoan;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JLabel label4;
    private javax.swing.JTextField txt_InterestRate;
    private javax.swing.JTextArea txt_LoanAnalysis;
    private javax.swing.JTextField txt_LoanBalance;
    private javax.swing.JTextField txt_MonthlyPayment;
    private javax.swing.JTextField txt_NOPayments;
    // End of variables declaration//GEN-END:variables
}
